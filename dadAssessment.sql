/* 
Name: Riki Choi
Student ID: 103475494
*/


/* 
ERD to Relational Schema

SUBJECT(SUBJCODE, DESCRIPTION)
PRIMARY KEY(SUBJCODE)

TEACHER(STAFFID, SURNAME, GIVENNAME)
PRIMARY KEY(STAFFID)

STUDENT(STUDENTID, SURNAME, GIVENNAME, GENDER)
PRIMARY KEY(STUDENTID)

SUBJECTOFFERING(SUBJCODE, YEAR, SEMESTER, FEE, STAFFID)
PRIMARY KEY(SUBJCODE, YEAR, SEMESTER)
FOREIGN KEY(SUBJCODE) REFERENCES (SUBJECT)
FOREIGN KEY(STAFFID) REFERENCES TEACHER

ENROLMENT(STUDENTID, SUBJCODE, YEAR, SEMESTER, DATEENROLLED, GRADE)
PRIMARY KEY(STUDENTID, SUBJCODE, YEAR, SEMESTER)
FOREIGN KEY(STUDENTID) REFERENCES STUDENT
FOREIGN KEY(SUBJCODE, YEAR, SEMESTER) REFERENCES SUBJECTOFFERING
*/

use s103475494

CREATE TABLE SUBJECT
(
    SUBJCODE NVARCHAR(100),
    DESCRIPTION NVARCHAR(500),
    PRIMARY KEY (SUBJCODE)
)

CREATE TABLE TEACHER
(
    STAFFID INT, 
    SURNAME NVARCHAR(100) NOT NULL, 
    GIVENNAME NVARCHAR (100) NOT NULL,
    PRIMARY KEY (STAFFID),
    CONSTRAINT CHK_TEACHER_STAFFID CHECK(LEN(STAFFID)=8)
    
)

CREATE TABLE STUDENT
(
    STUDENTID NVARCHAR(10), 
    SURNAME NVARCHAR(100) NOT NULL, 
    GIVENNAME NVARCHAR(100) NOT NULL, 
    GENDER NVARCHAR(1),
    PRIMARY KEY (STUDENTID),
    CONSTRAINT CHK_STUDENT_GENDER CHECK(GENDER IN ('M', 'F', 'I'))
)

CREATE TABLE SUBJECTOFFERING
(
    SUBJCODE NVARCHAR(100), 
    YEAR INT, 
    SEMESTER INT, 
    FEE MONEY NOT NULL, 
    STAFFID INT,
    PRIMARY KEY (SUBJCODE, YEAR, SEMESTER),
    FOREIGN KEY (SUBJCODE) REFERENCES [SUBJECT],
    FOREIGN KEY (STAFFID) REFERENCES TEACHER,
    CONSTRAINT CHK_SUBJOFFERING_YEAR CHECK(LEN(YEAR) = 4),
    CONSTRAINT CHK_SUBJOFFERING_SEMESTER CHECK(SEMESTER IN (1,2)),
    CONSTRAINT CHK_SUBJOFFERING_FEE CHECK(FEE > 0)
)

CREATE TABLE ENROLMENT
(
    STUDENTID NVARCHAR(10), 
    SUBJCODE NVARCHAR(100), 
    YEAR INT, 
    SEMESTER INT, 
    DATEENROLLED DATE, 
    GRADE NVARCHAR(2) DEFAULT NULL,
    PRIMARY KEY (STUDENTID, SUBJCODE, YEAR, SEMESTER),
    FOREIGN KEY (STUDENTID) REFERENCES STUDENT,
    FOREIGN KEY (SUBJCODE, YEAR, SEMESTER) REFERENCES SUBJECTOFFERING,
    CONSTRAINT CHK_ENROLMENT_YEAR CHECK(LEN(YEAR) = 4),
    CONSTRAINT CHK_ENROLMENT_SEMESTER CHECK(SEMESTER IN (1,2)),
    CONSTRAINT CHK_ENROLMENT_GRADE CHECK(GRADE IN ('N', 'P', 'C', 'D', 'HD'))
)



SELECT NAME
FROM SYS.objects
WHERE TYPE = 'U'

INSERT INTO SUBJECT(SUBJCODE, [DESCRIPTION]) VALUES
('ICTPRG418', 'Apply SQL to extract & manipulate data'),
('ICTBSB430', 'Create Basic Databases'),
('ICTDBS205', 'Design a Database');

INSERT INTO TEACHER(STAFFID, SURNAME, GIVENNAME) VALUES
(98776655, 'Young', 'Angus'),
(87665544, 'Scott',	'Bon'),
(76554433, 'Slade', 'Chris');


INSERT INTO STUDENT(STUDENTID, SURNAME, GIVENNAME, GENDER) VALUES
('s103475494', 'Riki', 'Choi', 'M'),
('s12233445', 'Baird', 'Tim', 'M'),
('s23344556', 'Nguyen', 'Anh', 'M'),
('s34455667', 'Hallinan', 'James', 'M');

INSERT INTO SUBJECTOFFERING(SUBJCODE, YEAR, SEMESTER, FEE, STAFFID) VALUES
('ICTPRG418', 2019, 1, 200, 98776655),
('ICTPRG418', 2020, 1, 225, 98776655),
('ICTBSB430', 2020, 1, 200, 87665544),
('ICTBSB430', 2020, 2, 200, 76554433),
('ICTDBS205', 2019, 2, 225, 87665544);


INSERT INTO ENROLMENT(STUDENTID, SUBJCODE, YEAR, SEMESTER, GRADE, DATEENROLLED) VALUES
('s12233445', 'ICTPRG418', 2019, 1, 'D', '2019-02-25'),
('s23344556', 'ICTPRG418', 2019, 1, 'P', '2019-02-15'),
('s12233445', 'ICTPRG418', 2020, 1, 'C', '2020-01-30'),
('s23344556', 'ICTPRG418', 2020, 1, 'HD', '2020-02-26'),
('s34455667', 'ICTPRG418', 2020, 1, 'P', '2020-01-28'),
('s12233445', 'ICTBSB430', 2020, 1, 'C', '2020-02-08'),
('s23344556', 'ICTBSB430', 2020, 2, null, '2020-06-30'),
('s34455667', 'ICTBSB430', 2020, 2, null, '2020-07-03'),
('s23344556', 'ICTDBS205', 2019, 2, 'P', '2019-07-01'),
('s34455667', 'ICTDBS205', 2019, 2, 'N', '2019-07-13');

SELECT * FROM STUDENT



SELECT ST.GIVENNAME, ST.SURNAME, S.SUBJCODE, SU.DESCRIPTION, S.YEAR, S.SEMESTER, S.FEE, T.GIVENNAME, T.SURNAME
FROM ENROLMENT E
INNER JOIN SUBJECTOFFERING S
ON E.SUBJCODE = S.SUBJCODE AND E.YEAR = S.YEAR AND E.SEMESTER = S.SEMESTER
INNER JOIN TEACHER T
ON S.STAFFID = T.STAFFID
INNER JOIN STUDENT ST
ON E.STUDENTID = ST.STUDENTID
INNER JOIN SUBJECT SU
ON S.SUBJCODE = SU.SUBJCODE

SELECT YEAR, SEMESTER, COUNT(*) AS 'Num of Enrolments'
FROM ENROLMENT
GROUP BY SEMESTER, YEAR;

SELECT E.*
FROM ENROLMENT E
INNER JOIN SUBJECTOFFERING S
ON E.SUBJCODE = S.SUBJCODE AND E.YEAR = S.YEAR AND E.SEMESTER = S.SEMESTER
WHERE S.FEE IN (SELECT MAX(FEE) FROM SUBJECTOFFERING);





-- CREATE VIEW [TASK5] AS 
-- SELECT ST.GIVENNAME, ST.SURNAME, S.SUBJCODE, SU.DESCRIPTION, S.YEAR, S.SEMESTER, S.FEE, T.GIVENNAME, T.SURNAME
-- FROM ENROLMENT E
-- INNER JOIN SUBJECTOFFERING S
-- ON E.SUBJCODE = S.SUBJCODE AND E.YEAR = S.YEAR AND E.SEMESTER = S.SEMESTER
-- INNER JOIN TEACHER T
-- ON S.STAFFID = T.STAFFID
-- INNER JOIN STUDENT ST
-- ON E.STUDENTID = ST.STUDENTID
-- INNER JOIN SUBJECT SU
-- ON S.SUBJCODE = SU.SUBJCODE;